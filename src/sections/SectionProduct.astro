---
import { Image } from 'astro:assets'

import { productsData } from '../utils/data'
import DownArrowIcon from '../assets/icons/down-arrow.png'
import SelectComponent from '../components/Product/SelectComponent.jsx'
import SlideImagesMovile from '../components/subcomponents/SlideImagesMovile.astro'
const { productData } = Astro.props
---

<main>
	<section>
		<div class='product-body'>
			<div class='product-title'>
				<p class='desktop-header'>
					<a class='shop-link' href='/shop'>Shop[{productsData.length}]</a>{`< ${productData.name}`}
				</p>
			</div>
			<p class='product-name'>{productData.name}</p>
			<p class='product-price'>{productData.price}</p>
			<div class='variants-container'>
				<SelectComponent productData={productData} client:load>
					<Image class='down-arrow__icon' src={DownArrowIcon} alt='down arrow' loading='eager' />
				</SelectComponent>
			</div>
			{
				productData.custom ? (
					<p class='contact-order'>Contact for order.</p>
				) : (
					<div class='product-info'>
						<h2 class='product-description'>{productData.description}</h2>
						<span>&nbsp</span>
						{productData.details ? productData.details.map(detail => <p class='product-details'>{detail}</p>) : ''}
						<span>&nbsp</span>
						<p class='product-details'>Color: Grey</p>
						<p class='product-details'>925 sterling silver.</p>
						<p class='product-details'>Made in Montreal.</p>
						<span>&nbsp</span>
						<p class='product-details'>{productData.model}</p>
					</div>
				)
			}
		</div>
		<SlideImagesMovile productData={productData} />
		<div class='product-images'>
			{
				productData.images.item_img.map((image: string) => (
					<span class='images-container'>
						<Image src={image} alt={productData.name} inferSize={true} />
					</span>
				))
			}
			{
				Object.values(productData.images.models_img)
					.reverse()
					.map((image: string) => (
						<span class='images-container'>
							<Image src={image} alt={productData.name} inferSize={true} />
						</span>
					))
			}
		</div>
	</section>
</main>

<style>
	main {
		display: flex;
		flex-direction: column;
		justify-content: center;
		margin: 0 1.875rem;
	}

	section {
		display: flex;
		justify-content: space-between;
		align-items: flex-start;
		padding: 0 0.5rem;
	}

	.product-body {
		width: 550px;
		position: sticky;
		background-color: white;
		padding: 1rem;
		display: flex;
		top: 140px;
		transform: translateY(100px);
		flex-direction: column;
	}

	.product-images {
		display: flex;
		flex-direction: column;
		width: 100%;
		height: auto;
		margin-bottom: 10vw;
	}

	.images-container {
		width: 100%;
		height: 800px;
		margin-top: 50px;
	}

	.down-arrow__icon {
		left: 190px;
		width: 10px;
		pointer-events: none;
		position: absolute;
	}

	img {
		width: 100%;
		height: 100%;
		object-fit: contain;
	}

	.desktop-header {
		display: flex;
		font-size: 12px;
		font-family: IBM Plex Mono, monospace;
		margin-bottom: 30px;
	}

	.shop-link {
		margin-right: 5px;
	}

	.shop-link:hover {
		text-decoration: underline;
	}

	.product-name {
		font-size: 1.25rem;
		font-family: Merriweather, serif;
	}

	.product-price {
		font-size: 13px;
		margin-top: 5px;
		font-family: Merriweather, serif;
	}

	.variants-container {
		display: flex;
		flex-direction: column;
		margin-top: 25px;
	}

	option {
		color: #000;
	}

	.active {
		opacity: 1;
	}

	.product-info {
		margin-top: 10px;
		margin-bottom: 200px;
	}

	.product-description {
		font-size: 12px;
		font-family: IBM Plex Mono, monospace;
	}

	.product-details {
		font-size: 12px;
		font-family: IBM Plex Mono, monospace;
	}

	.contact-order {
		margin-top: 10px;
		margin-bottom: 150px;
		font-size: 14px;
	}

	@media (max-width: 900px) {
		.product-body {
			padding: 0.5rem;
			top: 200px;
		}
	}

	@media (max-width: 560px) {
		.product-body {
			width: 100%;
			top: 0;
		}
	}

	@media (max-width: 800px) {
		section {
			flex-direction: column-reverse;
		}

		.product-images {
			display: none;
		}

		.product-title {
			display: none;
		}
	}
</style>
